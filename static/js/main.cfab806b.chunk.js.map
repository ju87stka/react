{"version":3,"sources":["components/Users/users.module.css","assets/images/user1.png","assets/images/loading.svg","components/Profile/MyPosts/Post/Post.module.css","components/Nav/Nav.module.css","components/Dialogs/Dialogs.module.css","api/Api.js","utils/objects-helper.js","redux/users-reducer.js","redux/profile-reducer.js","redux/dialog-reducer.js","redux/sidebar-reducer.js","redux/auf-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/News/News.js","components/Music/Music.js","components/Settings/Settings.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Common/FormsControl/FormsControls.js","utils/validators/validators.js","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.js","Hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js","components/Nav/Nav.js","components/Nav/NavContainer.js","components/Common/Paginators/Paginators.js","components/Users/User.js","components/Users/Users.js","components/Common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Login/Login.js","App.js","serviceWorker.js","index.js","components/Common/FormsControl/FormsControl.module.css","components/Common/Paginators/paginator.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getMyId","profileAPI","getProfile","authAPI","email","password","rememberMe","getStatus","updateStatus","status","put","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","initialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowing","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","state","action","followed","count","filter","id","posts","message","likesCount","newPostText","profile","setStatus","profileReducer","newPost","stateCopy","push","p","postId","dialogs","name","messages","dialogsReducer","newMessage","newMessageText","sidebarReducer","login","isAuth","setAuthUserData","payload","getInfoAuf","aufReducer","initialized","appReducer","reducers","combineReducers","profilePage","sidebar","dialogsPage","usersPage","auf","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddlware","News","props","Music","Settings","DialogItem","className","classes","dialog","active","item","src","to","Message","FormControl","input","meta","element","hasError","touched","error","styles","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLenght","length","maxLenght50","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsElements","messagesElement","React","createRef","dialogsItems","values","addMessage","newMessageBody","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","connect","addMessageActionCreator","Friends","Nav","friends","nav","activeClassName","NavContainer","Paginators","portionSize","pagesCount","Math","ceil","totalItemsCount","pages","i","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","selectedPage","pageNumber","key","e","onPageChanged","User","photos","small","userPhoto","disabled","some","Users","Preloader","preloader","style","width","height","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","requestUsers","bind","totalCount","Post","MyPosts","postsElements","postsBlock","AddPostReduxForm","addPost","newPostElement","PureComponent","maxLenght10","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","ProfileInfo","descriptionBlock","large","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","match","params","autorisedUserId","history","getUserProfile","isAuyth","withRouter","Header","header","loginBlock","logout","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","App","initializeApp","path","render","DialogsContainer","UsersContainer","dispatchResult","Promise","all","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfab806b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1cYBT\",\"selectedPage\":\"users_selectedPage__3Qqzb\"};","module.exports = __webpack_public_path__ + \"static/media/user1.e67e358c.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.9064981b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Ciomk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2lcu7\",\"item\":\"Nav_item__2dM1u\",\"active\":\"Nav_active__3GFQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1_wr8\",\"dialogsItems\":\"Dialogs_dialogsItems__3E052\",\"active\":\"Dialogs_active__3MmG9\",\"dialog\":\"Dialogs_dialog__10--T\",\"messages\":\"Dialogs_messages__2sIZz\",\"message\":\"Dialogs_message__2AjJI\",\"item\":\"Dialogs_item__379B2\"};","import * as axios from \"axios\";\r\n\r\nconst instance=axios.create(\r\n    {\r\n        baseURL : \"https://social-network.samuraijs.com/api/1.0/\",\r\n        withCredentials:true,\r\n        headers:{\"API-KEY\":\"73ed2ed5-b96a-4f1b-85ac-a580d11c5705\"}\r\n\r\n    }\r\n)\r\nexport  const usersAPI={\r\n    getUsers(currentPage=2,pageSize=1){\r\n\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response=>{\r\n\r\n                return response.data })},\r\n\r\n        follow(userId){\r\n           return  instance .post(`follow/${userId}`, {})\r\n\r\n        },\r\n        unfollow(userId){\r\n           return instance.delete(`follow/${userId}`)\r\n        },\r\n\r\n        getMyId(userId){\r\n        return profileAPI.getProfile(userId)\r\n        }\r\n    }\r\n    export const authAPI={\r\n        isAuthMe(){\r\n            return  instance.get(`/auth/me`)\r\n\r\n        },\r\n        login(email,password,rememberMe=false){\r\n            return  instance.post(`/auth/login`,{email,password,rememberMe})\r\n\r\n        },\r\n        logout(email,password,rememberMe=false){\r\n            return  instance.delete(`/auth/login`)\r\n\r\n        }\r\n\r\n}\r\nexport  const profileAPI={\r\n\r\n\r\n    getProfile(userId){\r\n        return instance.get(\"profile/\"+userId)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(\"profile/status/\"+userId)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(\"profile/status/\",{status:status})\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\nexport const updateObjectInArray=(items,itemId,objPropName,newObjProps)=>{\r\n\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/Api\";\r\nimport {updateObjectInArray} from \"../utils/objects-helper\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS= \"SET_USERS\"\r\nconst SET_CURRENT_PAGE=\"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USERS_COUNT=\"SET_TOTAL_USERS_COUNT\"\r\nconst TOGGLE_IS_FETCHING =\"TOGGLE_IS_FETCHING\"\r\nconst TOGGLE_IS_FOLLOWING =\"TOGGLE_IS_FOLLOWING\"\r\n\r\n\r\nlet initialState = {\r\n    users:[],\r\n    pageSize:5,\r\n    totalUsersCount:0,\r\n    currentPage:1,\r\n    isFetching: true,\r\n    followingInProgress:[]\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case  FOLLOW :\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users,action.userId, \"id\",{followed: true})\r\n\r\n            };\r\n        case  UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users,action.userId, \"id\",{followed: false})\r\n\r\n            };\r\n        case  SET_USERS :\r\n            return {\r\n                ...state,\r\n              users: action.users\r\n            };\r\n\r\n        case  SET_CURRENT_PAGE :\r\n            return {\r\n                ...state,\r\n                currentPage:action.currentPage\r\n            };\r\n        case  SET_TOTAL_USERS_COUNT :\r\n            return {\r\n                ...state,\r\n                totalUsersCount:action.count\r\n            };\r\n        case  TOGGLE_IS_FETCHING :\r\n            return {\r\n                ...state,\r\n                isFetching:action.isFetching\r\n            };\r\n        case  TOGGLE_IS_FOLLOWING :\r\n            return {\r\n                ...state,\r\n\r\n                followingInProgress:action.isFetching\r\n                    ?[...state.followingInProgress, action.userId]\r\n                    :state.followingInProgress.filter(id=>id!=action.userId)\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\nexport const setUsers= (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\nexport const setCurrentPage = (currentPage ) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\n    export const setTotalUsersCount = (totalUsersCount ) => {\r\n        return {\r\n            type: SET_TOTAL_USERS_COUNT,\r\n            count: totalUsersCount\r\n        }\r\n\r\n    }\r\n        export const toggleIsFetching = (isFetching ) => {\r\n            return {\r\n                type: TOGGLE_IS_FETCHING,\r\n                isFetching:isFetching\r\n            }}\r\n\r\n            export const toggleIsFollowing = (isFetching,userId ) => {\r\n                return {\r\n                    type: TOGGLE_IS_FOLLOWING,\r\n                    isFetching:isFetching,\r\n                    userId:userId\r\n                }\r\n\r\n\r\n}\r\nexport const getUsersThunkCreator=(currentPage,pageSize)=>{\r\n   return async(dispatch)=>{\r\n\r\n\r\n   dispatch( toggleIsFetching(true));\r\n       dispatch( setCurrentPage(currentPage));\r\n\r\n       let data= await usersAPI.getUsers(currentPage,pageSize)\r\n\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n       dispatch( toggleIsFetching(false));\r\n\r\n\r\n\r\n   }}\r\n\r\n\r\n    const followUnfollowFlow= async (dispatch, userId, apiMethod,actionCreator)=>{\r\n\r\n        dispatch(toggleIsFollowing(true,userId))\r\n        let response=await  apiMethod(userId)\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(actionCreator(userId))\r\n        }\r\n        dispatch(toggleIsFollowing(false,userId))\r\n\r\n    }\r\n\r\nexport const follow=(userId,pageSize)=>{\r\n    return async (dispatch)=>{\r\n        let apiMethod= usersAPI.follow.bind(usersAPI)\r\n         let actionCreator=followSuccess\r\n        followUnfollowFlow(dispatch,userId,apiMethod,actionCreator)\r\n\r\n            }}\r\n\r\nexport const unfollow=(userId,pageSize)=>{\r\n    return async (dispatch)=>{\r\n        let apiMethod= usersAPI.unfollow.bind(usersAPI)\r\n        let actionCreator=unfollowSuccess\r\n        followUnfollowFlow(dispatch,userId,apiMethod,actionCreator)\r\n\r\n    }}\r\n\r\nexport default usersReducer;","import {profileAPI, usersAPI} from \"../api/Api\";\r\nimport {followSuccess, toggleIsFollowing} from \"./users-reducer\";\r\n\r\nconst  ADD_POST=\"ADD-POST\";\r\nconst  UPDATE_NEW_POST_TEXT='UPDATE-NEW-POST-TEXT';\r\nconst  SET_USER_PROFILE='SET_USER_PROFILE';\r\nconst  SET_STATUS='SET_STATUS';\r\nconst  DELETE_POST='DELETE_POST';\r\n\r\n\r\nlet initialState= {             posts: [\r\n        {id: 1, message: \"First post\", likesCount: 12},\r\n        {id: 2, message: \"Second post\", likesCount: 6},\r\n    ],\r\n    newPostText: \"igor\",\r\n    profile: null,\r\n    status:\"\"\r\n\r\n\r\n\r\n};\r\n\r\n const profileReducer=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            let stateCopy = {...state};\r\n            stateCopy.posts = [...state.posts];\r\n            stateCopy.posts.push(newPost);\r\n\r\n            return stateCopy;\r\n        }\r\n\r\n\r\n\r\n\r\n        case SET_USER_PROFILE : {\r\n\r\n            return {...state, profile:action.profile};\r\n        }\r\n        case SET_STATUS : {\r\n\r\n            return {...state, status:action.status};\r\n        }\r\n        case DELETE_POST : {\r\n\r\n            return {...state, posts: state.posts.filter( p=> p.id != action.postId)};\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport  const addPostActionCreator=(newPostElement)=>   {\r\n    return{\r\n        type: ADD_POST,\r\n        newPostText:newPostElement\r\n    }\r\n}\r\nexport  const setStatus=(status)=>   {\r\n    return{\r\n        type: SET_STATUS,\r\n        status:status\r\n    }\r\n}\r\n\r\nexport const setUserProfile=(profile)=>   {\r\n    return{\r\n        type:SET_USER_PROFILE,\r\n        profile : profile    }\r\n}\r\nexport const deletePost=(postId)=>   {\r\n    return{\r\n        type:DELETE_POST,\r\n        postId : postId    }\r\n}\r\n\r\n\r\n\r\nexport const getUserProfile=(userId)=>{\r\n    return async (dispatch)=>{\r\n       let response=await usersAPI.getMyId(userId)\r\n\r\n            dispatch(setUserProfile(response.data));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }}\r\nexport const getStatus=(userId)=>{\r\n    return async (dispatch)=> {\r\n        let response=await profileAPI.getStatus(userId)\r\n\r\n            dispatch(setStatus(response.data));\r\n\r\n\r\n    }}\r\n\r\n        export const updateStatus=(status)=>{\r\n            return async (dispatch)=> {\r\n                let response=await   profileAPI.updateStatus(status)\r\nif(response.data.resultCode===0) {\r\n    dispatch(setStatus(status));\r\n}\r\n\r\n            }}\r\n\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_TEXT=\"UPDATE-NEW-MESSAGE-TEXT\";\r\nconst ADD_MESSAGE=\"ADD-MESSAGE\";\r\n\r\nlet initialState= {\r\n     dialogs: [\r\n        {id: 1, name: \"Igor\"},\r\n        {id: 2, name: \"Andrey\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Viktor\"},\r\n        {id: 6, name: \"Valera\"}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: \"Hi1\"},\r\n        {id: 2, message: \"Hi2\"},\r\n        {id: 3, message: \"Hi3\"},\r\n        {id: 4, message: \"Hi4\"},\r\n        {id: 5, message: \"Hi5\"},\r\n        {id: 6, message: \"Hi6\"}\r\n    ],\r\n };\r\n\r\n const dialogsReducer=(state=initialState,action)=>{\r\n\r\n     switch (action.type) {\r\n\r\n\r\n\r\n\r\ncase ADD_MESSAGE: {\r\n    let newMessage = {\r\n        id: 5,\r\n        message: action.newMessageText\r\n    };\r\n    return {...state,\r\nmessages: [...state.messages, newMessage]\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n}\r\ndefault:\r\nreturn state;\r\n}\r\n}\r\n\r\nexport  const addMessageActionCreator=(newMessageBody)=>   {\r\n    return{\r\n        type: ADD_MESSAGE,\r\n        newMessageText:newMessageBody\r\n    }\r\n}\r\n\r\n\r\nexport  default dialogsReducer;","\r\n\r\nlet initialState= [\r\n{id: 1, name: \"Friend1\"},\r\n{id: 2, name: \"Friend2\"},\r\n{id: 3, name: \"Friend3\"},\r\n\r\n\r\n];\r\n\r\n\r\n const sidebarReducer=(state=initialState,action)=>{\r\n\r\n\r\n\r\n\r\n\r\n    return state;\r\n    \r\n}\r\nexport default sidebarReducer;","import {authAPI, usersAPI} from \"../api/Api\";\r\nimport {stopSubmit} from \"redux-form\"\r\nconst SET_USER_DATA = \"auf/SET_USER_DATA\";\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId:null,\r\n    email:null,\r\n    login:null,\r\n    isFetching: false,\r\n    isAuth:false\r\n};\r\n\r\nconst aufReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case  SET_USER_DATA :\r\n            return {\r\n              ...state,\r\n                ...action.payload\r\n\r\n\r\n\r\n            };\r\n            default:\r\n\r\n\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const setAuthUserData = (userId,email,login,isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload:{userId,email,login,isAuth}\r\n    }\r\n}\r\nexport const getInfoAuf=()=>\r\n     async (dispatch)=>{\r\n         let response = await authAPI.isAuthMe()\r\n\r\n            if(response.data.resultCode===0){\r\n                let {id, login, email}=response.data.data;\r\n                dispatch(setAuthUserData(id,email,login,true))\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\nexport const login=(email,password,rememberMe)=> async (dispatch)=>{\r\n\r\n     let response= await  authAPI.login(email,password,rememberMe)\r\n    if(response.data.resultCode===0){\r\n                dispatch(getInfoAuf())\r\n            }else{\r\n                let message=response.data.messages.length>0 ?response.data.messages[0]:\"Some Error\"\r\n                dispatch(stopSubmit(\"login\", {_error:message}))\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\nexport const logout=()=>{\r\n    return async (dispatch)=>{\r\n       let response= await authAPI.logout()\r\n\r\n            if(response.data.resultCode===0){\r\n                dispatch(setAuthUserData(null,null,null,false))\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n    }}\r\n\r\nexport default aufReducer;","import {authAPI, usersAPI} from \"../api/Api\";\r\nimport {stopSubmit} from \"redux-form\"\r\nimport {getInfoAuf} from \"./auf-reducer\";\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\n\r\n\r\nlet initialState = {\r\n    initialized:false,\r\n\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case  SET_INITIALIZED :\r\n            return {\r\n              ...state,\r\n                initialized:true\r\n\r\n            };\r\n            default:\r\n\r\n\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport const initialisedSuccess = () => {\r\n    return {\r\n        type: SET_INITIALIZED\r\n\r\n    }\r\n}\r\nexport const initializeApp=()=>{\r\n    return (dispatch)=>{\r\n       let dispatchResult=dispatch(getInfoAuf())\r\n        Promise.all([dispatchResult]).then(()=>{\r\n            dispatch(initialisedSuccess())\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialog-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport aufReducer from \"./auf-reducer\";\r\nimport  thunkMiddlware  from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\nlet reducers=combineReducers({\r\n    profilePage:profileReducer,\r\n    sidebar:sidebarReducer,\r\n    dialogsPage:dialogsReducer,\r\n    usersPage:usersReducer,\r\n    auf:aufReducer,\r\n    form:formReducer,\r\n    app:appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlware)\r\n));\r\n\r\n\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News=(props)=> {\r\n        return (\r\n            <div>News\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n    export default News;\r\n","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst Music=(props)=> {\r\n        return (\r\n            <div>Music\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n    export default Music;\r\n","import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings=(props)=> {\r\n        return (\r\n            <div>Settings\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n    export default Settings;\r\n","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <div className={classes.item}>\r\n                <img src={\"https://static.mk.ru/upload/entities/2019/05/08/00/articles/detailPicture/c7/b5/08/6e/5dda626cb409b1fa6942c29040609e17.jpg\"}>\r\n                </img></div>\r\n            <NavLink to={\"/dialogs/\" + props.id}> {props.name}</NavLink>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={classes.message}>{props.message}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from \"./FormsControl.module.css\"\r\n\r\nconst FormControl=({input,meta,element,...props})=>{\r\n    const  hasError=meta.touched && meta.error\r\n    return(\r\n\r\n        <div className={styles.formControl+\" \"+ (hasError? styles.error:\"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea=(props)=>{\r\n\r\nconst {input,meta,element,...restProps}=props\r\n    return(\r\n\r\n       <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const Input=(props)=>{\r\n\r\n    const {input,meta,element,...restProps}=props\r\n\r\n    return(\r\n\r\n        <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n    )\r\n}","export const required=(value)=>{\r\n    if(value)    return undefined;\r\n    return \"Field is required\";\r\n}\r\nexport const maxLengthCreator=(maxLenght)=>(value)=>{\r\n    if(value && value.length>maxLenght)    return `Max length is ${maxLenght} symbols`;\r\n    return undefined;\r\n}\r\n","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../Common/FormsControl/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLenght50=maxLengthCreator(50)\r\n\r\nconst  AddMessageForm=(props)=>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <div>\r\n                <div>\r\n                    <Field component={Textarea} name=\"newMessageBody\" placeholder =\"Enter your message\"\r\n\r\n                           validate={[required,maxLenght50]}\r\n                    />\r\n\r\n\r\n                </div>\r\n                <div>\r\n\r\n                    <button >Add Message</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport  default reduxForm({\r\n    form:\"dialogAddMessageForm\"\r\n})(AddMessageForm)","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControl/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let  state=props.dialogsPage\r\n\r\n    let dialogsElements=state.dialogs.\r\n    map(          (dialog)=><DialogItem name={dialog.name} id={dialog.id}/>       );\r\n    let messagesElement= state.messages.\r\n    map((message) => <Message message={message.message}/>);\r\n    let newMessageElement=React.createRef();\r\n\r\n\r\n\r\n    let addNewMessage=(values) =>{\r\nprops.addMessage(values.newMessageBody)\r\n    }\r\n\r\n\r\n\r\n\r\n    if(!props.isAuth) return  <Redirect to={\"/login\"}/>\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n\r\n            <div className={classes.messages}>\r\n                {messagesElement}\r\n\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect=(state)=>({\r\n    isAuth:state.auf.isAuth\r\n\r\n\r\n})\r\n\r\nexport const withAuthRedirect=(Component)=> {\r\n  class RedirectComponent extends React.Component{\r\n      render() {\r\n          if(!this.props.isAuth){\r\n              return <Redirect to={\"/login\"}/>\r\n          }\r\n          return <Component {...this.props}/>\r\n      }\r\n      }\r\n\r\n    let ConnectedAuthRedirectComponent=connect(mapStateToPropsForRedirect)(RedirectComponent)\r\nreturn ConnectedAuthRedirectComponent\r\n  }\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport {\r\n    addMessageActionCreator,\r\n\r\n} from \"../../redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return {\r\ndialogsPage:state.dialogsPage,\r\n}\r\n}\r\n\r\n\r\n\r\n\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n\r\n        addMessage:(newMessageBody)=>{\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n","import React from 'react';\r\nimport classes from './Nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Friends = (props) => {\r\n    return(\r\n<div>{props.name}</div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Nav = (props) => {\r\n\r\n\r\n    let  friends =props.sidebar.\r\n    map( (p)=>                <Friends id={p.id} name={p.name}/>);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    return (\r\n                    <nav className={classes.nav}>\r\n                        <div className={classes.item}>\r\n                            <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink></div>\r\n                        <div className={classes.item}>\r\n                            <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink></div>\r\n                        <div className={classes.item}>\r\n                            <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink></div>\r\n                        <div className={classes.item}>\r\n                            <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink></div>\r\n                        <div className={classes.item}>\r\n                            <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink></div>\r\n                        <div className={classes.item}>\r\n                            <NavLink to=\"settings\" activeClassName={classes.active}>Settings</NavLink></div>\r\n                        <div> Friends</div>\r\n                        <div> {friends} </div>\r\n                    </nav>\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport Nav from \"./Nav\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return {\r\n        sidebar:state.sidebar,\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n\r\n\r\n    }\r\n}\r\n\r\nconst NavContainer=connect(mapStateToProps,mapDispatchToProps)(Nav);\r\n\r\nexport default NavContainer;\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./paginator.module.css\";\r\n\r\n\r\nlet Paginators = ({portionSize=10, ...props} ) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\nlet portionCount=Math.ceil(pagesCount/portionSize)\r\n    let [portionNumber, setPortionNumber] =useState(1)\r\n    let leftPortionPageNumber=(portionNumber-1)*portionSize\r\n    let rightPortionPageNumber=portionNumber*portionSize\r\ndebugger\r\n    return <div className={styles.paginator}>\r\n        { portionNumber>1 &&\r\n            <button onClick={()=> {setPortionNumber(portionNumber-1)}} >Previous\r\n            </button>\r\n\r\n                    }\r\n                    {pages\r\n                .filter(p=>p >=leftPortionPageNumber && p<=rightPortionPageNumber)\r\n\r\n                .map(p => {\r\n                return <span className={\r\n\r\n                    props.currentPage === p ? styles.selectedPage+\" \"+ styles.pageNumber  : styles.pageNumber}\r\n\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p)\r\n                             }}>{p}</span>\r\n\r\n            })}\r\n        { portionCount> portionNumber &&\r\n        <button onClick={()=> {setPortionNumber(portionNumber+1)}} >Next\r\n        </button>\r\n\r\n        }\r\n\r\n        </div>\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Paginators;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user1.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginators from \"../Common/Paginators/Paginators\";\r\n\r\nlet User = (props) => {\r\n\r\nlet u=props.u\r\n\r\n    return( <div>\r\n            <span>\r\n                <div>\r\n                     <NavLink to={\"/profile/\" + u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                     </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed ?\r\n\r\n                        <button disabled={props.followingInProgress.some(id=> id===u.id)} onClick={() => {\r\n                            props.unfollow(u.id)\r\n\r\n                        }}>UnFollow</button> :\r\n\r\n\r\n                        <button disabled={props.followingInProgress.some(id=> id===u.id)} onClick={() => {\r\n\r\n                            props.follow(u.id)\r\n\r\n\r\n                        }}>Follow</button>\r\n\r\n                    }\r\n\r\n                </div>\r\n            </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n\r\n                        <div>{\"u.location.city\"}</div>\r\n                        <div>{\"u.location.country\"}</div>\r\n                    </span>\r\n\r\n\r\n\r\n                </span>\r\n\r\n            </div>)\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default User;\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport Paginators from \"../Common/Paginators/Paginators\";\r\nimport User from \"./User\";\r\n\r\nlet Users = (props) => {\r\n\r\n    return <div>\r\n        <Paginators currentPage={props.currentPage} totalItemsCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                    onPageChanged={props.onPageChanged}/>\r\n                    <div>\r\n        {\r\n            props.users.map(u => <User u={u} key={u.id} followingInProgress={props.followingInProgress}\r\n                follow={props.follow} unfollow={props.unfollow}\r\n\r\n            /> )\r\n        }\r\n    </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Users;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport preloader from \"../../../assets/images/loading.svg\";\r\n\r\n\r\n\r\nlet Preloader= (props)=>{\r\n    return (\r\n    <div>\r\n            <img src={preloader} style={{  width: \"200px\", height: \"100px\"}}/>\r\n\r\n\r\n        </div>\r\n\r\n    )}\r\n    export default Preloader;"," export const getUsers=(state)=>{\r\n     return state.usersPage.users\r\n }\r\n\r\n export const getPageSize=(state)=>{\r\n     return         state.usersPage.pageSize\r\n\r\n }\r\n export const getTotalUserCount=(state)=>{\r\n     return state.usersPage.totalUsersCount\r\n\r\n }\r\n export const getCurrentPage=(state)=>{\r\n     return state.usersPage.currentPage\r\n\r\n }\r\n export const getIsFetching=(state)=>{\r\n     return state.usersPage.isFetching\r\n\r\n }\r\n export const getFollowingInProgress=(state)=>{\r\n     return state.usersPage.followingInProgress\r\n\r\n }","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, getUsersThunkCreator,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching, toggleIsFollowing,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return <>\r\n\r\n            {this.props.isFetching ? <Preloader/>: null}\r\n\r\n            <Users    totalUsersCount={this.props.totalUsersCount}\r\n                         pageSize={this.props.pageSize}\r\n                         currentPage={this.props.currentPage}\r\n                         onPageChanged={this.onPageChanged}\r\n                         users={this.props.users}\r\n                         follow={this.props.follow}\r\n                         unfollow={this.props.unfollow}\r\n                      followingInProgress={this.props.followingInProgress}\r\n\r\n\r\n                                />\r\n        </>\r\n\r\n    }\r\n}\r\n\r\n\r\nlet  mapStateToProps =(state)=>{\r\n\r\n    return{\r\n        users:getUsers(state),\r\n        pageSize:getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress:getFollowingInProgress(state)\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport  default compose(\r\n    connect (mapStateToProps,\r\n        { follow,\r\n            unfollow,\r\n            setCurrentPage,\r\n            toggleIsFollowing,\r\n            requestUsers: getUsersThunkCreator\r\n        }),\r\n        withAuthRedirect\r\n)(UsersAPIComponent)\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport  classes from './Post.module.css';\r\nconst Post=(props)=> {\r\n    return (\r\n\r\n\r\n\r\n                <div className={classes.item}>\r\n                    <img src={\"https://static.mk.ru/upload/entities/2019/05/08/00/articles/detailPicture/c7/b5/08/6e/5dda626cb409b1fa6942c29040609e17.jpg\"}>\r\n                    </img>\r\n                    {props.message}\r\n\r\n                <div>\r\n                    <span>Like</span>\r\n                    {props.likesCount}\r\n                </div>\r\n                </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Post;","import React, {Component, PureComponent} from 'react';\r\nimport  classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport Profile from \"./../Profile\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControl/FormsControls\";\r\n\r\n\r\nclass MyPosts extends PureComponent {\r\n\r\n\r\n    render() {\r\n\r\n        let postsElements = this.props.posts.map((p) => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n        let newPostElement = React.createRef();\r\n\r\n        let onAddPost = (values) => {\r\n\r\n            this.props.addPost(values.newPostElement);\r\n\r\n        }\r\n\r\n\r\n        return (\r\n\r\n            <div className={classes.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddPostReduxForm onSubmit={onAddPost}/>\r\n\r\n                <div>New post</div>\r\n                <div className={classes.posts}>\r\n                    {postsElements}\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nlet maxLenght10=maxLengthCreator(10)\r\nconst AddPostForm=(props)=>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} name=\"newPostElement\" placeholder =\"Enter your post\"\r\n                   validate={[required,maxLenght10]} />\r\n\r\n        </div>\r\n        <div>\r\n\r\n        <button >Add Post</button>\r\n</div>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostReduxForm= reduxForm({\r\n    form:\"addPostForm\"\r\n})(AddPostForm)\r\nexport default MyPosts;","import React, {useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n\r\nconst ProfileStatusWithHooks =(props)=> {\r\n\r\nlet [editMode,setEditMode]=useState(false)\r\n    let [status,setStatus]=useState(props.status)\r\n\r\n\r\n\r\n    const activateEditMode=()=>{\r\n    setEditMode(true)\r\n}\r\n\r\n    const deactivateEditMode=()=>{\r\n        setEditMode(false)\r\n\r\n      props.updateStatus(status);\r\n    }\r\n    const onStatusChange=(e)=>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(()=>{\r\n\r\n    setStatus(props.status)\r\n}, [props.status])\r\n\r\n    return (\r\n<div>\r\n            {!editMode &&\r\n            <div>\r\n\r\n            <span onDoubleClick={activateEditMode}>{props.status ||  \"No status\"} </span>\r\n        </div>\r\n}\r\n{editMode &&\r\n    <div>\r\n        <input onChange={onStatusChange} autoFocus={true}  onBlur={deactivateEditMode} value={status}/>\r\n    </div>\r\n    }\r\n    < /div>\r\n\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks ;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\nstate={\r\n    editMode:false,\r\n   status:this.props.statusInputRef\r\n}\r\n\r\nactivateEditMode=()=>{\r\n\r\n\r\nthis.setState({\r\n        editMode: true\r\n    }\r\n)}\r\n    deactivateEditMode(){\r\n        this.setState({\r\n                editMode:false\r\n            }\r\n\r\n        )\r\nthis.props.updateStatus(this.state.status);\r\n}\r\n\r\n\r\n onStatusChange=(e)=>{\r\nthis.setState({\r\nstatus:e.currentTarget.value\r\n\r\n })\r\n }\r\n\r\n componentDidUpdate(prevProps,prevState) {\r\n     if (prevProps.status !== this.props.status) {\r\n         this.setState({\r\n             status: this.props.status\r\n         })\r\n\r\n     }\r\n }\r\n    render(){\r\n    return (\r\n<div>\r\n            {!this.state.editMode &&\r\n            <div>\r\n\r\n            <span onDoubleClick={this.activateEditMode}>{this.props.status ||  \"No status\"}</span>\r\n        </div>\r\n}\r\n{this.state.editMode &&\r\n    <div>\r\n        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode.bind(this)} value={this.state.status}/>\r\n    </div>\r\n    }\r\n    < /div>\r\n\r\n    )\r\n}}\r\nexport default ProfileStatus;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile)\r\n\r\n        return <Preloader/>\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {  /*<img\r\n                src={'https://discoverportugal.ru/media/zoo/images/praia-do-barranco-das-canas_4d99f19e19702a07a9bb6191b30fa565.jpg'}>\r\n            </img>*/}\r\n            </div>\r\n            <div className={classes.descriptionBlock} >\r\n                <img src={props.profile.photos.large}/>\r\n                <ProfileStatusWithHooks  updateStatus={props.updateStatus} status={props .status}/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\n\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return {\r\n        posts:state.profilePage.posts,\r\n        newPostText:state.profilePage.newPostText\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n\r\n        addPost:(newPostElement)=>{\r\n            dispatch(addPostActionCreator(newPostElement));\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer=connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n\r\n\r\n            <MyPostsContainer\r\n                     />\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Profile;","import React from 'react';\r\n\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends  React.Component{\r\n    componentDidMount() {\r\n\r\nlet userId=this.props.match.params.userId\r\n        if(!userId){\r\n            userId=this.props.autorisedUserId\r\n            if(!userId){\r\n                 this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <Profile {...this.props} profile={this.props.profile}\r\n                 status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n\r\n    );\r\n}}\r\n\r\n\r\n\r\nlet mapStateToProps=(state)=>({\r\n    profile:state.profilePage.profile,\r\n    status:state.profilePage.status,\r\n    autorisedUserId:state.auf.userId,\r\n    isAuyth:state.auf.isAuth\r\n\r\n\r\n})\r\nexport default compose(\r\n    connect (mapStateToProps, {getUserProfile,getStatus,updateStatus}),\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Header=(props)=> {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://www.proza.ru/pics/2018/10/03/1345.jpg'></img>\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth ? <div>{props.login}- <button onClick={props.logout} >Log out</button></div>\r\n                : <NavLink  to={\"/login\"}>Login</NavLink>}\r\n\r\n\r\n            </div>\r\n        </header>\r\n);\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport Header from \"./Header\";\r\nimport {getInfoAuf, logout} from \"../../redux/auf-reducer\";\r\nimport {connect} from \"react-redux\";\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n             <Header{ ...this.props }   />\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>({\r\n    isAuth: state.auf.isAuth,\r\n    login:state.auf.login\r\n\r\n})\r\nexport default connect(mapStateToProps, {logout} )(HeaderContainer);\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControl/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auf-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"../../components/Common/FormsControl/FormsControl.module.css\"\r\nconst LoginForm=({handleSubmit,error})=>{\r\n\r\n    return       (\r\n    <form onSubmit={handleSubmit}>\r\n<div>\r\n    <Field placeholder={\"Email \"} name={\"email\"} component={Input}\r\n           validate={[required]}/>\r\n</div>\r\n            <div>\r\n                <Field placeholder={\"Password \"} name={\"password\"} component={Input} type={\"password\"}\r\n                       validate={[required]}/>\r\n\r\n            </div>\r\n         <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/>Remember Me\r\n\r\n            </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n\r\n\r\n        </div>}\r\n            <div>\r\n<button>Login</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n\r\n}\r\nconst LoginReduxForm= reduxForm({\r\n    form:\"login\"\r\n})(LoginForm)\r\n\r\n\r\n\r\n\r\nconst Login=(props)=>{\r\nconst onSubmit=(formData)=>{\r\nprops.login(formData.email,formData.password,formData.rememberMe)\r\n}\r\nif(props.isAuth){\r\n    return <Redirect to={\"/profile\"}/>\r\n}\r\n    return     <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\nconst mapStateToProps=(state)=>({\r\n    isAuth: state.auf.isAuth\r\n})\r\nexport default connect(mapStateToProps,{login})(Login)","import React, {Component} from 'react';\nimport './App.css';\n\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport NavContainer from \"./components/Nav/NavContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp()\n\n    }\n    render() {\n        if(!this.props.initialized){\nreturn <Preloader/>\n        }\n        return (\n\n\n            <div className={'head'}>\n                <HeaderContainer/>\n                <NavContainer/>\n\n                <div className={\"app-wrapper-content\"}>\n                    <Route path=\"/dialogs\" render={() => <DialogsContainer\n\n\n                    />}/>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer\n\n\n                    />}/>\n                    <Route path='/users' render={() => <UsersContainer/>\n                    }/>\n                    <Route path='/login' render={() => <Login/>\n                    }/>\n\n                    <Route path=\"/News\" component={News}/>\n                    <Route path=\"/music\" component={Music}/>\n                    <Route path=\"/settings\" component={Settings}/>\n                </div>\n            </div>\n\n\n\n        )\n    }\n}\nconst mapStateToProps=(state)=>({\n    initialized:state.app.initialized\n})\nexport default compose(\n    withRouter,\n    (connect(mapStateToProps, {initializeApp} )))(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\n\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n        <App />\n            </Provider>\n\n        </BrowserRouter>\n\n    , document.getElementById('root'));\n\n\nwindow.store=store\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1HAXE\",\"error\":\"FormsControl_error__V8vkb\",\"formSummaryError\":\"FormsControl_formSummaryError__1Aiky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"paginator_selectedPage__wv33A\",\"paginator\":\"paginator_paginator__214s_\",\"pageNumber\":\"paginator_pageNumber__15u-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__375n2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3Azqp\",\"posts\":\"MyPosts_posts__110cs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__hKQq6\",\"loginBlock\":\"Header_loginBlock__2wR-e\"};"],"sourceRoot":""}